// Lego version 2.0.0-beta.1
import { h, Component } from './lego.min.js'




const __template = function({ state }) {
  return [  
    h("button", {"onclick": (typeof clicked !== 'undefined' ? clicked : this.clicked).bind(this), "name": `hello button`}, `Hello ${ state.name }!`)
  ]
}

const __style = function({ state }) {
  return h('style', {}, `
    
    
      button {
        border-bottom: 5px solid black;
      }
      button::after {
        content: "-> (${ state.name.length } letters)";
      }
    
  `)
}

// -- Lego Core
let render = async function (state) {}

class Lego extends Component {
  constructor() {
    super()
    try {
      this.__state = state
    } catch {}
    render = this.render.bind(this)
    try {
      constructed(this)
    } catch {}
  }
  get vdom() { return __template }
  get vstyle() { return __style }
}
// -- End Lego Core


export default class extends Lego {
  init() {
    this.state = { name: "world" }
  }

  clicked(event) {
    alert(`clicked on ${ event.target.name }`)
  }

  connected() {
    console.info("hello-world component connected")
  }
}

