// Lego version 2.0.0-beta.1
import { h, Component } from './lego.min.js'



  const title = "Hello Lego!"
  const state = {
    count: 0
  }

  function increment() {
    render({ count: state.count + 1 })
  }

  function constructed(component) {
    component.connected = function() {
      console.log(this.state)
    }
  }


const __template = function({ state }) {
  return [  
    h("section", {}, [
      h("header", {}, [
        h("h1", {}, `${ title }`)
      ])
    ]),
    h("main", {}, [
      h("table", {}, [
        h("thead", {}, [
          h("tr", {}, [
            h("td", {}, [
              h("button", {"onclick": (typeof increment !== 'undefined' ? increment : this.increment).bind(this)}, `clicked ${ state.count } times`)
            ])
          ])
        ])
      ])
    ])
  ]
}

const __style = function({ state }) {
  return h('style', {}, `
    
    
  `)
}

// -- Lego Core
let render = async function (state) {}

export default class Lego extends Component {
  constructor() {
    super()
    try {
      this.__state = state
    } catch {}
    render = this.render.bind(this)
    try {
      constructed(this)
    } catch {}
  }
  get vdom() { return __template }
  get vstyle() { return __style }
}
// -- End Lego Core


