// Lego version 2.0.0-beta.1
import { h, Component } from './lego.min.js'



  const name = "hey"
  function clicked(event) {
    alert(`clicked on ` + event.target.nodeName)
  }

  function getUrl(id) {
    return `/here/${id}`
  }


const __template = function({ state }) {
  return [  
    h("button", {"onclick": (typeof clicked !== 'undefined' ? clicked : this.clicked).bind(this), "href": getUrl('44')}, `Hello ${ name }`)
  ]
}

const __style = function({ state }) {
  return h('style', {}, `
    
    
      body{}
    
  `)
}

// -- Lego Core
let render = async function (state) {}

export default class Lego extends Component {
  constructor() {
    super()
    try {
      this.__state = state
    } catch {}
    render = this.render.bind(this)
    try {
      constructed(this)
    } catch {}
  }
  get vdom() { return __template }
  get vstyle() { return __style }
}
// -- End Lego Core


